// NOTES
    // currently properties and values are separated by a single "_", but this will eventually be migrated to a double "__"
    // consider them to be single for now, but later will switch to double
// REFERENCES 
    // these are the accepted values for the [bracketed variables] that can be used
    // [breakpoints] 
        // "mobile", "phablet", "tablet", "laptop", "desktop", "retina"
    // [sides]
        // "top", "right", "bottom", "left"
    // [visibility states]
        // "block", "inline", "table"
    // [transition values]
        // "rotate-out", "rotate-in"
    //[# of columns]
        // this can be a number 1 through 12

// VALUES AND PROPERTIES
// [ui-core]
    // position__relative/absolute/fixed
    // width__flush/constrained
    // align__center/left/right
    // padding__[breakpoint]-[side]
    // margin__[breakpoint]-[side]
// [ui-state]
    // visible/hidden__[breakpoint]-[visibility type, if not hidden]
    // transition__[transition value]
// [ui-grid]
    // NOTE: only usable in the layout module.  Other modules with responsiveness should either use the gridle helper or be custom written for the module
    // [breakpoint]__[# of columns]


	$layout-default-padding       : 30px 30px;

	$layout-flush-padding         : 0px;

	$layout-constrained-max-width : 1050px;
	$layout-constrained-padding   : 30px 30px;


	
    $breakpoint-list : "mobile","phablet","tablet","laptop","desktop","retina";
    $side-list       : "top","right","bottom","left";
    $size-list       : "xxs","xs","sm","md","lg","xl","xxl";
    
    * {
        // VISIBLE AND HIDDEN STATES  -- START
        @each $breakpoint in $breakpoint-list {
            &[data-ui-state~="visible__#{$breakpoint}-block"] {
                @include gridle_show($breakpoint);
            }
            &[data-ui-state~="visible__#{$breakpoint}-inlineblock"] {
                @include gridle_show_inline($breakpoint);
            }
            &[data-ui-state~="visible__#{$breakpoint}-table"] {
                @include gridle_show_inline($breakpoint);
            }

            &[data-ui-state~="hidden__#{$breakpoint}"] {
                @include gridle_hide($breakpoint);
            }
            &[data-ui-state~="is__hidden-#{$breakpoint}"] {
                @include gridle_hide($breakpoint);
            }
        } 

        &[data-ui-state~="is__hidden"] {
            display : none;
        }  

        &[data-ui-core~="float__right"] {
            float : right;
        }
        &[data-ui-core~="float__left"] {
            float : left;
        }
        // VISIBLE AND HIDDEN STATES  -- END     

        // GRID SYSTEM  -- START
            // this creates our grid system for us
            // the css producted is something like: 
                //[class^="layout-"][data-ui-grid~="desktop_1"]
            // this can be used in conjunction with a class="layout-" data-ui-grid="mobile_12"
        @each $breakpoint in $breakpoint-list {
            &[data-ui-grid~="#{$breakpoint}__offset-none"] {
                @include gridle_state(#{$breakpoint}) {
                    margin-left : 0px;
                }
            }         
            @for $i from 1 through 12 {
                &[data-ui-grid~="#{$breakpoint}__#{$i}"] {
                    @include gridle($i, $breakpoint);
                }
                &[data-ui-grid~="#{$breakpoint}__offset-#{$i}"] {
                    @include gridle_state(#{$breakpoint}) {
                        margin-left : gridle_get_column_width( $i );
                    }
                }
            }
        }
        // GRID SYSTEM  -- END


        // PADDING AND MARGIN SETTINGS  -- START
        &[data-ui-core~="margin__none"] {
            margin : 0px !important;
        }
        &[data-ui-core~="margin__top-none"] {
            margin-top : 0px !important;
        }
        &[data-ui-core~="margin__right-none"] {
            margin-right : 0px !important;
        }
        &[data-ui-core~="margin__left-none"] {
            margin-left : 0px !important;
        }
        &[data-ui-core~="margin__bottom-none"] {
            margin-bottom : 0px !important;
        }

        &[data-ui-core~="padding__none"] {
            padding : 0px !important;
        }
        &[data-ui-core~="padding__top-none"] {
            padding-top : 0px !important;
        }
        &[data-ui-core~="padding__right-none"] {
            padding-right : 0px !important;
        }
        &[data-ui-core~="padding__left-none"] {
            padding-left : 0px !important;
        }
        &[data-ui-core~="padding__bottom-none"] {
            padding-bottom : 0px !important;
        }
        $increment : 4;
        @each $size in $size-list {
            @each $side in $side-list {
                &[data-ui-core~="margin__#{$side}-#{$size}"] {
                    margin-#{$side} : #{$increment}px;
                }
                &[data-ui-core~="padding__#{$side}-#{$size}"] {
                        padding-#{$side} : #{$increment}px;
                }
            }
            @each $breakpoint in $breakpoint-list {
                &[data-ui-core~="margin__#{$breakpoint}-#{$size}"] {
                    @include gridle_state(#{$breakpoint}) {
                        margin : #{$increment}px;
                    }
                } 
                &[data-ui-core~="margin__#{$breakpoint}-horizontal-#{$size}"] {
                    @include gridle_state(#{$breakpoint}) {
                        margin-left  : #{$increment}px;
                        margin-right : #{$increment}px;
                    }
                } 
                &[data-ui-core~="margin__#{$breakpoint}-vertical-#{$size}"] {
                    @include gridle_state(#{$breakpoint}) {
                        margin-top    : #{$increment}px;
                        margin-bottom : #{$increment}px;
                    }
                } 

                &[data-ui-core~="padding__-#{$size}"] {
                    @include gridle_state(#{$breakpoint}) {
                        padding : #{$increment}px;
                    }
                }                     
                &[data-ui-core~="padding__#{$breakpoint}-#{$size}"] {
                    @include gridle_state(#{$breakpoint}) {
                        padding : #{$increment}px;
                    }
                } 
                &[data-ui-core~="padding__#{$breakpoint}-horizontal-#{$size}"] {
                    @include gridle_state(#{$breakpoint}) {
                        padding-left  : #{$increment}px;
                        padding-right : #{$increment}px;
                    }
                } 
                &[data-ui-core~="padding__#{$breakpoint}-vertical-#{$size}"] {
                    @include gridle_state(#{$breakpoint}) {
                        padding-top    : #{$increment}px;
                        padding-bottom : #{$increment}px;
                    }
                } 

                @each $side in $side-list {
                    &[data-ui-core~="margin__#{$breakpoint}-#{$side}-#{$size}"] {
                        @include gridle_state(#{$breakpoint}) {
                            margin-#{$side} : #{$increment}px;
                        }
                    }

                    &[data-ui-core~="padding__#{$breakpoint}-#{$side}-#{$size}"] {
                        @include gridle_state(#{$breakpoint}) {
                            padding-#{$side} : #{$increment}px;
                        }
                    }
                }
            }
            $increment : $increment + 8;
        }
        // PADDING AND MARGIN SETTINGS  -- END
    }
    [class^="layout"] {
        font-size : 0px;

        // ***************************************************
        // SUBCLASSES  -- START
        // ***************************************************
            &[class$="_default"] {
                background : #eee;
            }
            &[class$="_primary"] {
                background : $color__primary;
            }
            &[class$="_light"] {
                background : #fff;
            }
            &[class$="_dark"] {
                background : #36393e;
            }  
        // ***************************************************
        // SUBCLASSES  -- END
        // ***************************************************



        // ***************************************************
        // UI-CORE  -- START
        // ***************************************************

            // MODES  -- START
            &[data-ui-core~="mode__constrained"] {
                max-width : 1100px; 
            }
            &[data-ui-core~="mode__full"] {
                width  : 100%;
                height : 100%;
            }
            // MODES  -- END


            // POSITION SETTINGS  -- START
            &[data-ui-core~="position__relative"] {
                position : relative;
            }
            &[data-ui-core~="position__absolute"] {
                position : absolute;
            }
            &[data-ui-core~="position__fixed"] {
                position : fixed;
            }
            // POSITION SETTINGS  -- END      


            // ALIGN SETTINGS  -- START
            &[data-ui-core~="align__center"] {
                text-align : center;
            }
            &[data-ui-core~="align__left"] {
                text-align : left;
            }
            &[data-ui-core~="align__right"] {
                text-align : right;
            }
            // ALIGN SETTINGS  -- END


            // PERSPECTIVE SETTINGS  -- START
            &[data-ui-core~="perspective__small"] {
                @include prefix(perspective, 800);
            }
            &[data-ui-core~="perspective__medium"] {
                @include prefix(perspective, 1000);
            }
            &[data-ui-core~="perspective__large"] {
                @include prefix(perspective, 1200);
            }
            // PERSPECTIVE SETTINGS  -- END

        // ***************************************************
        // UI-CORE  -- END
        // ***************************************************

    }
